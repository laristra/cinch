#------------------------------------------------------------------------------#
# Copyright (c) 2014 Los Alamos National Security, LLC
# All rights reserved.
#------------------------------------------------------------------------------#

import sys
import string
from collections import OrderedDict

#------------------------------------------------------------------------------#
# Header comment
#------------------------------------------------------------------------------#

header = \
"""<!--
    Copyright (c) 2014 Los Alamos National Secutiry, LLC
    All rights reserved.

    This file was automatically generated by the documentation service
	 in the cinch command-line tool.
-->
"""

#------------------------------------------------------------------------------#
# Chapter class
#------------------------------------------------------------------------------#

class Chapter():

	"""
	"""

	def __init__(self, title):

		"""
		"""

		self._title = title
		self._content = []

	# __init__

	def title(self):
		return self._title
	# title

	def append(self, content):

		"""
		"""

		self._content.append(content)

	# append

	def print_content(self):

		"""
		"""

		for line in self._content:
			sys.stdout.write(line)
		# for

	# print

	def str_content(self):
		# Don't use any seperator
		return string.join(self._content, '')
	# str_content

#------------------------------------------------------------------------------#
# Document class
#------------------------------------------------------------------------------#

class Document():

	"""
	"""

	def __init__(self, title):

		"""
		"""

		self._title = title
		self._sections = OrderedDict()

		# Add header information
		self._sections['header'] = Chapter('Header')
		self._sections['header'].append(header)

	# __init__

	def title(self):
		return self._title
	# title

	def chapter(self, title):

		"""
		"""

		if not title in self._sections:
			self._sections[title] = Chapter(title)

		return self._sections[title]
	# chapter

	def sections(self):
		return self._sections
	# sections

	def add_chapter(self, title, obj=None):
		if obj:
			self._sections[title] = obj
		elif not title in self._sections:
			self._sections[title] = Chapter(title)
	# add_chapter			
		
	def delete_chapter(self, title):
		del self._sections[title]

	def print_content(self):
		for chapter in self._sections:
			self._sections[chapter].print_content()
	# print_content

	def write(self, output):
		with open(output, 'w+') as f:
			for chapter in self._sections:
				f.write(self._sections[chapter].str_content())
	# write

# Document
